version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: pms_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/scripts/migrations:/docker-entrypoint-initdb.d/migrations
      - ./backend/scripts/seeds:/docker-entrypoint-initdb.d/seeds
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pms_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pms_backend
    environment:
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=3306
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - NODE_ENV=production
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pms_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pms_frontend
    environment:
      - REACT_APP_BACKEND_API_BASE_URL=http://localhost:3001/api
      - REACT_APP_SYSTEM_TITLE=Property Management System
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - pms_network

networks:
  pms_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
